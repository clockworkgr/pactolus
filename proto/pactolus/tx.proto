syntax = "proto3";
package clockworkgr.pactolus.pactolus;

// this line is used by starport scaffolding # proto/tx/import
import "pactolus/denom.proto";

option go_package = "github.com/clockworkgr/pactolus/x/pactolus/types";

// Msg defines the Msg service.
service Msg {
    // this line is used by starport scaffolding # proto/tx/rpc
  rpc UpdateOwner(MsgUpdateOwner) returns (MsgUpdateOwnerResponse);
  rpc MintAndSendTokens(MsgMintAndSendTokens) returns (MsgMintAndSendTokensResponse);
  rpc CreateDenom(MsgCreateDenom) returns (MsgCreateDenomResponse);
  rpc UpdateDenom(MsgUpdateDenom) returns (MsgUpdateDenomResponse);
  
}

// this line is used by starport scaffolding # proto/tx/message
message MsgUpdateOwner {
  string owner = 1;
  string denom = 2;
  string newOwner = 3;
}

message MsgUpdateOwnerResponse {
}

message MsgMintAndSendTokens {
  string owner = 1;
  string denom = 2;
  uint64 amount = 3;
  string recipient = 4;
}

message MsgMintAndSendTokensResponse {
}

message MsgCreateDenom {
  string owner = 1;
  string denom = 2;

  string description = 3;
  string ticker = 4;
  uint32 precision = 5;
  string url = 6;
  uint64 maxSupply = 7;
  bool canChangeMaxSupply = 8;
}
message MsgCreateDenomResponse {}

message MsgUpdateDenom {
  string owner = 1;
  string denom = 2;

  string description = 3;  
  
  string url = 4;
  uint64 maxSupply = 5;
  
  bool canChangeMaxSupply = 6;
}
message MsgUpdateDenomResponse {}
